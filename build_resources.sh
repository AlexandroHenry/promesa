#!/usr/bin/env bash

set -euo pipefail

# Move to project root (directory of this script)
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
cd "$SCRIPT_DIR"

log() {
  echo -e "$(date '+%H:%M:%S') | $1"
}

section() {
  echo ""
  log "=============================="
  log "$1"
  log "=============================="
}

# 0) Env checks
section "Environment checks"
if ! command -v flutter >/dev/null 2>&1; then
  echo "‚ùå Flutter is not installed or not in PATH"
  exit 1
fi

# 1) Dependencies
section "Fetching dependencies"
log "Running: flutter pub get"
flutter pub get

# 2) Build Runner (will also trigger configured builders like freezed, json_serializable, retrofit, riverpod, spider)
section "Running build_runner"
log "Running: flutter pub run build_runner build --delete-conflicting-outputs"
flutter pub run build_runner build --delete-conflicting-outputs

# 3) Spider assets (fallback to CLI if assets file not generated by builders)
section "Ensuring Spider assets are generated"
ASSETS_FILE="lib/core/assets/assets.dart"
GROUP_FILE_DIR="lib/promesa"
GROUP_FILES=(
  "$GROUP_FILE_DIR/app_icons.dart"
  "$GROUP_FILE_DIR/app_images.dart"
  "$GROUP_FILE_DIR/illustrations.dart"
  "$GROUP_FILE_DIR/logos.dart"
)
if [[ -f "$ASSETS_FILE" ]]; then
  log "‚úÖ Assets file exists: $ASSETS_FILE"
else
  log "Assets file not found after build_runner. Trying Spider CLI..."
  if command -v dart >/dev/null 2>&1; then
    log "Running: dart run spider build"
    if ! dart run spider build; then
      log "Spider via dart failed. Trying: flutter pub run spider build"
      flutter pub run spider build || true
    fi
  else
    log "dart not found. Trying: flutter pub run spider build"
    flutter pub run spider build || true
  fi

  if [[ -f "$ASSETS_FILE" ]]; then
    log "‚úÖ Assets generated: $ASSETS_FILE"
  else
    # Check grouped outputs as a success condition too
    any_group=false
    for f in "${GROUP_FILES[@]}"; do
      if [[ -f "$f" ]]; then
        any_group=true
        break
      fi
    done
    if [[ "$any_group" == true ]]; then
      log "‚úÖ Spider group files generated under: $GROUP_FILE_DIR"
      ls -1 "$GROUP_FILE_DIR" | sed 's/^/  - /'
    else
      log "‚ö†Ô∏è  Spider assets file still not found. Check build.yaml, spider.yaml and asset paths."
    fi
  fi
fi

# 4) Localization (generate keys from JSON translations)
section "Generating localization keys (easy_localization)"
if grep -q "easy_localization" pubspec.yaml >/dev/null 2>&1; then
  # Output directory for generated keys
  LOCALE_OUT_DIR="lib/core/localization"
  mkdir -p "$LOCALE_OUT_DIR"
  log "Running: flutter pub run easy_localization:generate -S assets/translations -O $LOCALE_OUT_DIR -o locale_keys.g.dart -f keys"
  if ! flutter pub run easy_localization:generate \
    -S assets/translations \
    -O "$LOCALE_OUT_DIR" \
    -o locale_keys.g.dart \
    -f keys; then
    log "‚ö†Ô∏è  easy_localization key generation failed. Skipping."
  else
    log "‚úÖ Generated: $LOCALE_OUT_DIR/locale_keys.g.dart"
  fi
else
  log "easy_localization not detected in pubspec.yaml. Skipping localization generation."
fi

echo ""
log "üéâ All done."

